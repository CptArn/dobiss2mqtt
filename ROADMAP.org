#+TITLE: Plan of Attack
* DONE [#A] get a docker build working
:LOGBOOK:
CLOCK: [2020-02-26 Mi 08:58]--[2020-02-26 Mi 11:01] =>  2:03
:END:
Updated readme. Docker container is running but homeassistant is not really
working well right now ? Seems like zigbee2mqtt is also not working.
* DONE [#A] figure out how to expose real devices to Home Assistant
Had to emit an identifier per output.
* DONE [#B] Make the polling interval configurable
It's now hardcoded to 500ms.

Added: POLL_INTERVAL_IN_MS=500
* TODO [#B] Set up some testing
Normally I test but it is a bit of a pain with RxJS.
* TODO [#B] finetune socket management to give breathing room to other users of the socket
I notice that a single CAN Programmer can only have a single active socket
session. The Dobiss app also uses a socket connection to check the states of the
lights. So it's important to not hog the socket connection if it's not needed.
That said, it's kind of needed because we need to constantly ping the CAN
Programmer to check the state of the relay outputs.
* DONE [#B] Add a timeout operator to the socket requests

This way we will ensure we do terminate every socket request after a while. Even
if the CAN Programmer is left hanging.

It will probably crash the whole process though as there is no work done for
automatic restarting of the observables.

But that's probably not a bad thing. If the socket is not working your docker
process shouldn't pretend to be stable.
* TODO [#C] add authentication for mqtt
* look into dimmers supported by dobiss
* [#A] look into switches
I'll probably have to hook hardware into the TCP loops for the switches. Then I
can intercept the keypress messages per switch. This will then allow me to
expose those switches as real switches in mqtt.

So it'll probably be another project which has to be deployed on ESP modules.
* [#C] look into restarting/dropping requests automatically when things go away (like the socket or mqtt)
The state for an output in particular needs to be fully reset. If we fail to
emit a state we should also not mark that new state as the last known state. We
should keep retry sending that new state.

For now though everything crashes and the whole process is stopped. If the
docker service is restarted then we should retry it anyway.
* [#C] make the config live reload
We can make it live reload for shits & giggles.
Might be nice when you are finetuning your configuration.

If we do this then we need to make sure to somehow re-emit the config when we
update it. And if we remove an output then we should emit blank config for that
output so that Home Assistant can remove the device / entity.
* Get [[https://volta.sh][https://volta.sh]] working properly
It's in package.json but I don't really see it working yet on my machine.
* Add a docker healthcheck
We can do this by having a file which is written on every non-avoideable error
that is handled.

Let's say a socket request timed out. Or a publish is not working on MQTT.

We can retry the socket request or retry sending the message on MQTT. But we
should also update that file.

Then we can create a HEALTHCHECK script which will read the file and see if it
exists. If so, delete it and mark us unhealthy. If it does not exist we are healthy.
* Figure out if Home Assistant emits a request for config as part of the discovery protocol
It might do something like this. And we could then re-emit all the config we have.
* [#B] Implement [[https://github.com/mozilla/node-convict][Convict]] for the config
* [#B] Support Dimmers
Can it be done through CAN Programmer ?
* Support Covers
Can it be done through CAN Programmer ?
* Support Power Plugs
Can it be done through CAN Programmer ?
* Support Ventilation
Can it be done through CAN Programmer ?
* Support Timers
Can it be done through CAN Programmer ?
* Support Moods
Can it be done through CAN Programmer ?
